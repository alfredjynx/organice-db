apiVersion: apps/v1
kind: Deployment
metadata:
    name: postgres
spec:
    replicas: 1
    selector:
        matchLabels:
            app: postgres
    template:
        metadata:
          labels:
              app: postgres
        spec:
        containers:
            - name: postgres
            image: 'postgres:latest'
            imagePullPolicy: IfNotPresent
            ports:
                - containerPort: 5432
            env:
                - name: DATABASE_DB
                valueFrom:
                    configMapKeyRef:
                        name: postgres-configmap
                        key: POSTGRES_DB
                - name: DATABASE_USERNAME
                valueFrom:
                    secretKeyRef:
                        name: postgres-credentials
                        key: POSTGRES_USERNAME
                - name: DATABASE_PASSWORD
                valueFrom:
                    secretKeyRef:
                        name: postgres-credentials
                        key: POSTGRES_PASSWORD
            volumeMounts:
                - mountPath: /var/lib/postgresql/data
                name: postgresdata
        volumes:
            - name: postgresdata
            persistentVolumeClaim:
                claimName: postgres-volume-claim
    ```

``` shell
kubectl apply -f ./k8s/deployment.yaml
kubectl get deployments
kubectl get pods